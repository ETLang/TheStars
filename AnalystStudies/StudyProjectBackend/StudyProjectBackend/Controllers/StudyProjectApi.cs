using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System.Security.Cryptography;
using System.Text;
using System.Linq;
using System.Web.Http.Cors;

namespace StudyProjectBackend.Controllers
{
    [EnableCors(origins: "*", headers: "*", methods: "*")]
    [Route("api/[action]")]
    [Consumes("application/json")]
    [ApiController]
    public class StudyProjectApi : ControllerBase
    {
        private static SHA512 SHAEncoder = SHA512.Create();

        private static byte[] PasswordHashOf(string rawPassword) =>
            SHAEncoder.ComputeHash(Encoding.UTF8.GetBytes(rawPassword));

        #region Initial Data

        private static readonly Location[] InitialLocations =
        {
            new Location
            {
                Id = (long)KnownLocationIds.YakimaCallCenter,
                Type = LocationType.CallCenter,
                Name = "Yakima Call Center",
                Address = "1700 N 6th St.",
                City = "Yakima",
                State = "WA",
                Country = "USA",
                PostalCode = "98901"
            },
            new Location
            {
                Id = (long)KnownLocationIds.IssaquahCallCenter,
                Type = LocationType.CallCenter,
                Name = "Issaquah Call Center",
                Address = "999 Lake Dr",
                City = "Issaquah",
                State = "WA",
                Country = "USA",
                PostalCode = "98027"
            },
            new Location
            {
                Id = (long)KnownLocationIds.HomeOffice,
                Type = LocationType.Office,
                Name = "Home Office",
                Address = "999 Lake Dr",
                City = "Issaquah",
                State = "WA",
                Country = "USA",
                PostalCode = "98027"
            },
            new Location
            {
                Id = 1,
                Type = LocationType.Warehouse,
                Name = "Yakima Warehouse",
                Address = "2310 Longfibre Rd",
                City = "Yakima",
                State = "WA",
                Country = "USA",
                PostalCode = "98903"
            },
            new Location
            {
                Id = 2,
                Type = LocationType.Warehouse,
                Name = "Puyallup Warehouse",
                Address = "1201 39th Ave SW",
                City = "Puyallup",
                State = "WA",
                Country = "USA",
                PostalCode = "98373"
            },
            new Location
            {
                Id = 3,
                Type = LocationType.Warehouse,
                Name = "Federal Way Warehouse",
                Address = "35100 Enchanted Pkwy S",
                City = "Federal Way",
                State = "WA",
                Country = "USA",
                PostalCode = "98003"
            },
            new Location
            {
                Id = 4,
                Type = LocationType.Warehouse,
                Name = "Issaquah Warehouse",
                Address = "1801 10th Ave NW",
                City = "Issaquah",
                State = "WA",
                Country = "USA",
                PostalCode = "98027"
            },
        };

        private static readonly Employee[] InitialEmployees =
        {
            new Employee
            {
                Id = 1,
                FirstName = "Eunhye",
                LastName = "Sung",
                Email = "esung@costco.com",
                PasswordHash = PasswordHashOf("SpecialPassword"),
                HireDate = new DateTime(2017, 10, 26),
                Wage = 57.69f,
                PhoneNumber = "5093674236",
                SocialSecurityNumber = "1234567890",
                Location = (long)KnownLocationIds.YakimaCallCenter
            },
            new Employee
            {
                Id = 2,
                FirstName = "Evan",
                LastName = "Lang",
                Email = "elang@meta.com",
                PasswordHash = PasswordHashOf("EvenMoreSpecialPassword"),
                HireDate = DateTime.Today,
                Wage = 13.37f,
                PhoneNumber = "2535849397",
                SocialSecurityNumber = "0987654321",
                Location = (long)KnownLocationIds.YakimaCallCenter
            },
            new Employee
            {
                Id = 3,
                FirstName = "Jim",
                LastName = "Bob",
                Email = "jbob@costco.com",
                PasswordHash = PasswordHashOf("BadPassword"),
                HireDate = new DateTime(1911, 7, 4),
                Wage = 50,
                PhoneNumber = "5552229999",
                SocialSecurityNumber = "7845123690",
                Location = (long)KnownLocationIds.HomeOffice
            },
            new Employee
            {
                Id = 4,
                FirstName = "Lizzo",
                LastName = "Celebrity",
                Email = "lceleb@costco.com",
                PasswordHash = PasswordHashOf("0"),
                HireDate = new DateTime(2018, 1, 1),
                Wage = 17.76f,
                PhoneNumber = "5551212777",
                SocialSecurityNumber = "5236987410",
                Location = (long)KnownLocationIds.IssaquahCallCenter
            },
        };

        #endregion

        #region Server State

        private static Dictionary<long, Employee> _allEmployees = new Dictionary<long, Employee>();
        private static Dictionary<long, Location> _allLocations = new Dictionary<long, Location>();

        #endregion

        static StudyProjectApi()
        {
            foreach (var employee in InitialEmployees)
                _allEmployees[employee.Id] = employee;
            foreach (var location in InitialLocations)
                _allLocations[location.Id] = location;
        }

        #region API

        [HttpGet]
        [ActionName("Locations")]
        public IEnumerable<Location> GetLocations()
        {
            return _allLocations.Values;
        }

        [HttpGet]
        [ActionName("Employee")]
        public Employee GetEmployee()
        {
            return _allEmployees.Values.First();
        }

        [HttpPost]
        [ActionName("insert")]
        //[ActionName("Employee")]
        [ProducesResponseType(StatusCodes.Status200OK, Type = typeof(Employee))]
        [ProducesResponseType(StatusCodes.Status400BadRequest)]
        [Consumes("application/x-www-form-urlencoded", "multipart/form-data")]
        public IActionResult AddEmployee(
            [FromForm] long id,
            [FromForm] string firstName,
            [FromForm] string lastName,
            [FromForm] string email,
            [FromForm] string password,
            [FromForm] string hireDate,
            [FromForm] float wage,
            [FromForm] string phoneNumber,
            [FromForm] string ssn,
            [FromForm] long location)
        {
            if (_allEmployees.ContainsKey(id))
                return BadRequest("An employee with this ID already exists.");
            if (string.IsNullOrEmpty(firstName))
                return BadRequest("First name is required");
            if (string.IsNullOrEmpty(lastName))
                return BadRequest("Last name is required");
            if (string.IsNullOrEmpty(email))
                return BadRequest("Email is required");
            if (string.IsNullOrEmpty(password))
                return BadRequest("Password is required");
            if (string.IsNullOrEmpty(hireDate) || !DateTime.TryParse(hireDate, out var hireDateValue))
                return BadRequest("Hire date is missing or invalid");
            if (wage <= 0)
                return BadRequest("Wage must be positive");
            if (string.IsNullOrEmpty(phoneNumber))
                return BadRequest("Phone number is required");
            if (string.IsNullOrEmpty(ssn))
                return BadRequest("Social security number is required");
            if (!_allLocations.ContainsKey(location))
                return BadRequest("Location ID is unknown");

            var newEmployee = new Employee
            {
                Id = id,
                FirstName = firstName,
                LastName = lastName,
                Email = email,
                PasswordHash = PasswordHashOf(password),
                HireDate = hireDateValue,
                Wage = wage,
                PhoneNumber = phoneNumber,
                SocialSecurityNumber = ssn,
                Location = location
            };

            _allEmployees[id] = newEmployee;
            return Ok(newEmployee);
        }

        [HttpGet]
        [ActionName("employeeInfo")]
        [ProducesResponseType(StatusCodes.Status200OK, Type = typeof(Employee))]
        [ProducesResponseType(StatusCodes.Status404NotFound)]
        public IActionResult GetEmployeeById(long id)
        {
            if (_allEmployees.TryGetValue(id, out var foundEmployee))
                return Ok(foundEmployee);
            else
                return Ok(null);
        }

        static readonly string[] FirstNames = new string[]
        {
"Sienna",
"Luca",
"Ellison",
"Adan",
"Amiyah",
"Keith",
"Melany",
"Rex",
"Megan",
"Levi",
"Viviana",
"Kyson",
"Ellianna",
"Phoenix",
"Indie",
"Winston",
"Jazmin",
"Wade",
"Hannah",
"Kevin",
"Nalani",
"Aden",
"Lacey",
"Aziel",
"Joanna",
"Mohammad",
"Ivory",
"Rhett",
"Lyla",
"Mitchell",
"Zoie",
"Curtis",
"Savannah",
"Guillermo",
"Maya",
"Johnathan",
"Lexi",
"Jesse",
"Scarlette",
"Zane",
"Quinn",
"Mathew",
"Cynthia",
"Cameron",
"Hadlee",
"Hendrix",
"Layla",
"Leroy",
"Sloan",
"Arlo",
"Daleyza",
"Jamir",
"Bridget",
"Keegan",
"Halo",
"Zane",
"Cecelia",
"Beckham",
"Mavis",
"Luke",
"Sloan",
"Vincenzo",
"Lily",
"Finnley",
"Keilani",
"Koa",
"Danna",
"Wells",
"Harlee",
"Fletcher",
"Ava",
"Harlem",
"Jacqueline",
"Omari",
"Elyse",
"Jaxx",
"Isabella",
"Myles",
"Bellamy",
"Hank",
"Annika",
"Ricky",
"Ellie",
"Vance",
"Raquel",
"Wallace",
"Eileen",
"Charlie",
"Ansley",
"Maximo",
"Dorothy",
"Heath",
"Valerie",
"Jaxson",
"Naomi",
"Alijah",
"Lexie",
"Misael",
"Marlowe",
"Winston",
"Rivka",
"Parker",
"Ryan",
"Kylan",
"Zoey",
"Tristan",
"Kaylani",
"Archer",
"Leia",
"Zayden",
"Valeria",
"Carter",
"Scarlet",
"Seven",
"Sloan",
"Zachariah",
"Harlow",
"Daxton",
"Paisley",
"Alex",
"Laura",
"Adriel",
"Ivy",
"Rome",
"Ryan",
"Watson",
"Iliana",
"Layton",
"Abby",
"Alijah",
"Magdalena",
"Rodney",
"Alison",
"Ronan",
"Noah",
"Dean",
"Evie",
"Lawson",
"Alessia",
"Sam",
"Rosalie",
"Jackson",
"Meredith",
"Caleb",
"Kimber",
"Xavier",
"Katherine",
"Lucca",
"Mina",
"Braylon",
"Joelle",
"Taylor",
"Alison",
"Edison",
"Emory",
"Peter",
"Emmaline",
"Junior",
"Madelynn",
"Ira",
"Brinley",
"Mathias",
"Ainsley",
"Jaxton",
"Kathryn",
"Nolan",
"Sloane",
"Jakari",
"Tinsley",
"Jovanni",
"Olive",
"Remington",
"Amayah",
"Josue",
"Dayana",
"Emir",
"Melanie",
"Rayan",
"Cleo",
"Niko",
"Khaleesi",
"Kace",
"Danna",
"Darren",
"Journey",
"Gerald",
"Avah",
"Spencer",
"Celeste",
"Conrad",
"Phoenix",
"Henry",
"Erin",
"Gael",
"Christina",
"Brady",
"Imani",
"Turner",
"Annalise",
"Reece",
"Leila",
"Mccoy",
"Dayana",
"Alec",
"Jovie",
"Kingsley",
"Haisley",
"Curtis",
"Cecelia",
"Wade",
"Leia",
"Moses",
"Averi",
"Owen",
"Kaiya",
"Miller",
"Paula",
"Josiah",
"Novah",
"Beckham",
"Izabella",
"Yusuf",
"Aniya",
"Boston",
"Andrea",
"Kyson",
"Natalie",
"Kalel",
"Deborah",
"Parker",
"Ariella",
"Dakari",
"Laurel",
"Oliver",
"Laylah",
"Wayne",
"Jada",
"Damien",
"Trinity",
"Julius",
"Anika",
"Ledger",
"Alia",
"Tadeo",
"Braelyn",
"Franklin",
"Araceli",
"Colson",
"Lilyana",
"Leo",
"Nancy",
"Bobby",
"Gloria",
"Karson",
"Harleigh",
"Aarav",
"Adrianna",
"Davion",
"Luisa",
"Casey",
"Isabela",
"Ernesto",
"Teagan",
"Victor",
"Amelia",
"Troy",
"Penelope",
"Weston",
"Jazmin",
"Rogelio",
"Kamila",
"Rylan",
"Adaline",
"Zayd",
"Camilla",
"Flynn",
"Elodie",
"Cassius",
"Mikaela",
"Alonzo",
"Meilani",
"Jayceon",
"Annie",
"Giovanni",
"Amiyah",
"Weston",
"Emerie",
"Avery",
"Lilianna",
"Jaiden",
"Lana",
"Colby",
"Aria",
"Jakob",
"Makayla",
"Cruz",
"Monica",
"Jordan",
"Magnolia",
"Tony",
"Leia",
"Chase",
"Murphy",
"Brayden",
"Rayne",
"Calum",
"Brooklyn",
"Jaxon",
"Luisa",
"Joseph",
"Kaydence",
"Milan",
"Ramona",
"Leighton",
"Harper",
"Jad",
"June",
"Kellan",
"Royal",
"Raphael",
"Hannah",
"Lawson",
"Natalia",
"Brycen",
"Aniyah",
"Tucker",
"Kaiya",
"Jakob",
"Ezra",
"Ameer",
"Anika",
"Nathaniel",
"Ariah",
"Gage",
"Lyra",
"Fletcher",
"Aniyah",
"Colter",
"Peyton",
"Leif",
"Marleigh",
"Louie",
"Alani",
"Robin",
"Savannah",
"Dillon",
"Callie",
"Vicente",
"Jillian",
"Arlo",
"Lucille",
"Gatlin",
"Whitney",
"Xzavier",
"Kaylie",
"Abraham",
"Noelle",
"Lane",
"Adele",
"Kason",
"Amelia",
"Luka",
"Charlotte",
"Zakai",
"Raelynn",
"Sonny",
"Clare",
"Salvatore",
"Tiana",
"Lucca",
"Maliyah",
"Forrest",
"Ariel",
"Julio",
"Adelina",
"Mohammad",
"Ryann",
"Casey",
"Leslie",
"Kason",
"Macy",
"Kameron",
"Anne",
"Alan",
"Remington",
"Memphis",
"Miracle",
"Gerald",
"Paulina",
"Spencer",
"Charlee",
"Kyler",
"Amoura",
"Carl",
"Evangeline",
"Dakari",
"Harmoni",
"Marcellus",
"Andrea",
"Kace",
"Cynthia",
"Colter",
"Ella",
"Mathew",
"Jada",
"Grayson",
"Jimena",
"Denver",
"Nathalia",
"Keenan",
"June",
"Jackson",
"Rosemary",
"Finnley",
"Blair",
"Jeremy",
"Haley",
"August",
"Amaris",
"Adan",
"Magnolia",
"Byron",
"Lilianna",
"Frank",
"Izabella",
"Jedidiah",
"Kimberly",
"Malik",
"Mia",
"Jared",
"Robin",
"Lucas",
"Abigail",
"Xavier",
"Rosie",
"Bruce",
"Scarlet",
"Bo",
"River",
"Boden",
"Kara",
"Kamryn",
"Marlee",
"Lian",
"Elise",
"Wilson",
"Melina",
"Marcellus",
"Penelope",
"Kyler",
"Amber",
"Giovanni",
"Alayna",
"Frank",
"Kaydence",
"Alexander",
"Estelle",
"Fernando",
"Zoie",
"Wilder",
"Ashlyn",
"Brock",
"Macy",
"Kendrick",
"Summer",
"Reign",
"Marie",
"Wayne",
"Charleigh",
"Wilder",
"Rowan",
"Louis",
"Milan",
"Deandre",
"Mariam",
"Ezekiel",
"Zaniyah",
"Maurice",
"Lorelei",
"Jordan",
"Armani",
"Leonel",
"Dalary",
"Joziah",
"Alayna",
"Adan",
"Naya",
"Kobe",
"Jessica",
"Ivan",
"Aleena",
"Waylon",
"Maya",
"Aron",
"Milena",
"Odin",
"Estrella",
"Ian",
"Addilynn",
"Maddox",
"Jennifer",
"Ira",
"Charlie",
"Trevor",
"Rosie",
"Milo",
"Gia",
"Oakley",
"Angie",
"Kameron",
"Jaycee",
"Braylon",
"Joelle",
"Muhammad",
"Sienna",
"Collin",
"Kimberly",
"Mohammad",
"Remington",
"Conor",
"Charlie",
"Azrael",
"Nola",
"Jay",
"Alivia",
"Tyler",
"Jane",
"Yehuda",
"Paulina",
"Juan",
"Sage",
"Liam",
"Remington",
"Jett",
"Indie",
"Zaire",
"Maya",
"Royce",
"Alia",
"Miguel",
"Ashlynn",
"Taylor",
"Rebekah",
"Leonard",
"Naomi",
"Bryant",
"Aitana",
"Holden",
"Simone",
"Adam",
"Annabelle",
"Ariel",
"Addyson",
"Gatlin",
"Yamileth",
"Cohen",
"Rylee",
"Adan",
"Vanessa",
"Leon",
"Bexley",
"Peyton",
"Aniyah",
"Maximo",
"Cynthia",
"Wilson",
"Malaysia",
"Camilo",
"Kensley",
"Trey",
"Arianna",
"Kabir",
"April",
"Crosby",
"Olive",
"Stanley",
"Fallon",
"King",
"Malani",
"Dane",
"Siena",
"Wayne",
"Kamila",
"Sullivan",
"Sloan",
"Zane",
"Amina",
"Mitchell",
"Alexia",
"Eliezer",
"Athena",
"Cannon",
"Lacey",
"Landry",
"Leia",
"Jake",
"Freya",
"Antonio",
"Theodora",
"Jason",
"Harleigh",
"Zaire",
"Amora",
"Mccoy",
"Karen",
"Layne",
"Iyla",
"Jaziel",
"Clarissa",
"Bryce",
"Miriam",
"Jovanni",
"Esme",
"Bentley",
"Dylan",
"Kenji",
"Estella",
"Colby",
"Bianca",
"Murphy",
"Paityn",
"Tristan",
"Chelsea",
"Mekhi",
"Karina",
"Ali",
"Alani",
"Edgar",
"Gabrielle",
"Otis",
"Cora",
"Solomon",
"Estella",
"Victor",
"Raquel",
"Van",
"Sophia",
"Lane",
"Addisyn",
"Ephraim",
"Sky",
"Rogelio",
"Paulina",
"Jose",
"Xiomara",
"Benjamin",
"Adalee",
"Kaison",
"Kaylee",
"Odin",
"Ella",
"Nasir",
"Allison",
"Keith",
"Martha",
"Sage",
"Ellie",
"Alvin",
"Jocelyn",
"Kobe",
"Rosa",
"Layton",
"Aylin",
"Knox",
"Lena",
"Kenneth",
"Zuri",
"Anthony",
"Avah",
"Travis",
"Taylor",
"Khari",
"Tori",
"Santos",
"Sunny",
"Enrique",
"Sara",
"Pablo",
"Addilynn",
"Andre",
"Amaya",
"Ocean",
"Jessica",
"Joey",
"Hadley",
"Juelz",
"Talia",
"Scott",
"Scarlette",
"Jalen",
"Fallon",
"Rome",
"Allison",
"Vihaan",
"Luna",
"Blaze",
"Amoura",
"Easton",
"Karter",
"Walter",
"Amy",
"Spencer",
"Dylan",
"Tyson",
"Aleena",
"Major",
"Oaklyn",
"Dax",
"Brielle",
"Graysen",
"Brielle",
"Crosby",
"Ximena",
"Jensen",
"Adrianna",
"Zaire",
"Ava",
"Quinton",
"Ashlynn",
"Aron",
"Leilany",
"Abdiel",
"Tatum",
"Quentin",
"Elizabeth",
"James",
"Katherine",
"Kaiden",
"Paige",
"Omari",
"Celine",
"Donovan",
"Mae",
"Alec",
"Thea",
"Valentin",
"Nala",
"Chance",
"Kadence",
"Lee",
"Amaya",
"Kyle",
"Judith",
"Demetrius",
"Elyse",
"Canaan",
"Rebekah",
"Nehemiah",
"Charleigh",
"Elliott",
"Milani",
"Tristen",
"Sage",
"Kash",
"Emma",
"Rowan",
"Paisleigh",
"Emmanuel",
"Makenzie",
"Anakin",
"Francesca",
"Omari",
"Aleah",
"Rodney",
"Jianna",
"Nixon",
"Andi",
"Ermias",
"Laura",
"Stetson",
"Kyra",
"Alberto",
"Charleigh",
"Vance",
"Linda",
"Kareem",
"Jazmin",
"Uriah",
"Samara",
"Dangelo",
"Kara",
"Bellamy",
"Emberly",
"Kash",
"Jennifer",
"Ronin",
"Trinity",
"Justin",
"Reagan",
"Kenneth",
"Siena",
"Charlie",
"Amelie",
"Conner",
"Kylie",
"Evan",
"Elaine",
"Blaise",
"Emilia",
"Johan",
"Davina",
"Zeke",
"Hadassah",
"Cassius",
"Chanel",
"Phillip",
"Logan",
"Edwin",
"Malia",
"Xander",
"Sarai",
"Coen",
"Hadlee",
"Nico",
"Luna",
"Cayden",
"Aubrey",
"Marcelo",
"Lilianna",
"Louie",
"Jaliyah",
"Ocean",
"Raven",
"Kristian",
"Dylan",
"Fletcher",
"Jacqueline",
"Alexander",
"Morgan",
"Russell",
"Laney",
"Hector",
"Kehlani",
"Charlie",
"Millie",
"Miles",
"Isabella",
"Koa",
"Rhea",
"Zane",
"Brianna",
"Marcelo",
"Promise",
"Korbyn",
"Dorothy",
"Sergio",
"Alessia",
"Braylon",
"Clarissa",
"Kane",
"Zoie",
"Memphis",
"Kairi",
"Erik",
"Amira",
"Cohen",
"Maeve",
"Kolton",
"Paula",
"Korbyn",
"Ava",
"Ronan",
"Victoria",
"Drew",
"Freya",
"Everest",
"Alena",
"Kylan",
"Mira",
"Trent",
"Maryam",
"Mateo",
"Murphy",
"Aydin",
"Noor",
"Emanuel",
"Charley",
"Kai",
"Lacey",
"Soren",
"Alessia",
"Henrik",
"Kassidy",
"Judson",
"Adaline",
"Zander",
"Jillian",
"Wade",
"Lillie",
"Lucas",
"Juliette",
"Rhys",
"Lillie",
"Trenton",
"Annabella",
"Nicolas",
"Logan",
"Darren",
"Alexa",
"Edgar",
"Mikaela",
"Crosby",
"Trinity",
"Kingston",
"Kamiyah",
"Ares",
"Alison",
"Ocean",
"Noah",
"Brooks",
"Kara",
"Allan",
"Victoria",
"Guillermo",
"Nyomi",
"Bishop",
"Remington",
"Azrael",
"Gloria",
"Jad",
"Berkley",
"Peyton",
"Kehlani",
"Ledger",
"Ada",
"Kye",
"Aya",
"Titan",
"Flora",
"Fletcher",
"Camila",
"Manuel",
"Dylan",
"Nikolai",
"Emerson",
"Forest",
"Iliana",
"Casen",
"Jacqueline",
"Jamie",
"Demi",
"Emmett",
"Mylah",
"Lyric",
"Mae",
"Ramon",
"Itzel",
"Enzo",
"Oaklynn",
"Prince",
"Mariana",
"Jakari",
"Hallie",
"Frank",
"Eve",
"Chandler",
"Gia",
"Derek",
"Nylah",
"Gerardo",
"Kendall",
"Watson",
"Layne",
"Orion",
"Mary",
"Ricky",
"Addilyn",
"Eddie",
"Victoria",
"Legend",
"Brynn",
"Ariel",
"Isabelle",
"Darren",
"Lara",
"Colten",
"Mackenzie",
"Jasper",
"Miranda",
"Joaquin",
"Alessia",
"Taylor",
"Lilah",
"Jabari",
"Kennedi",
"Jakari",
"Brylee",
"Troy",
"Cara",
"Emmitt",
"Matilda",
"Henry",
"Kaitlyn",
"Reign",
"Lacey",
"Kobe",
"Wrenley",
"Kylo",
"Amayah",
"Bowen",
        };

        static readonly string[] LastNames = new string[]
        {
"Gutierrez",
"Potts",
"Sherman",
"Avila",
"Whitaker",
"Abbott",
"Hancock",
"Velez",
"Moore",
"Chandler",
"Wu",
"Kane",
"Estrada",
"Preston",
"Ochoa",
"Atkinson",
"Carrillo",
"Hill",
"Crawford",
"Carson",
"Bonilla",
"Hobbs",
"Norman",
"O’brien",
"Foley",
"Collier",
"Porter",
"Alexander",
"McClain",
"Andersen",
"Brennan",
"Gutierrez",
"Hebert",
"Stewart",
"Cardenas",
"Haynes",
"Vazquez",
"Hickman",
"Lynch",
"James",
"Wiley",
"Hanna",
"Murphy",
"Raymond",
"Welch",
"White",
"Hayden",
"Mathews",
"Ray",
"Cabrera",
"Mathews",
"Stafford",
"Strickland",
"McCarty",
"Lynch",
"Lozano",
"Santiago",
"Schaefer",
"Walker",
"Mathews",
"Preston",
"Wright",
"Huff",
"Barajas",
"Weiss",
"Barton",
"Lang",
"Shannon",
"Dalton",
"Williams",
"Best",
"Garner",
"Harrington",
"Keith",
"Landry",
"Miller",
"Moreno",
"O’Donnell",
"Hampton",
"McFarland",
"Beltran",
"Lewis",
"Proctor",
"Huber",
"Portillo",
"Ware",
"Hansen",
"Faulkner",
"Nolan",
"Flynn",
"McCann",
"Washington",
"James",
"Phillips",
"Reese",
"Best",
"Middleton",
"Horne",
"Ochoa",
"Chung",
"Patel",
"Brady",
"Kramer",
"Young",
"Meyer",
"Carrillo",
"Hunter",
"Walsh",
"Schmidt",
"Chen",
"Allen",
"Walton",
"Dodson",
"Mathews",
"Escobar",
"Barnett",
"Park",
"Roberts",
"Mills",
"Becker",
"Owens",
"Edwards",
"Cherry",
"Brady",
"Carey",
"Dunlap",
"Huynh",
"Ball",
"Reese",
"Daugherty",
"Felix",
"Curry",
"Dean",
"Everett",
"Boyd",
"Wade",
"Becker",
"Glover",
"Wyatt",
"Kelley",
"Taylor",
"Bryan",
"Parker",
"Callahan",
"Alvarez",
"Stevens",
"Potter",
"Atkins",
"Yates",
"Rosas",
"Decker",
"Curry",
"Collier",
"Burgess",
"Hudson",
"McPherson",
"English",
"Farmer",
"Chung",
"Hale",
"Rodgers",
"Parks",
"Warner",
"Hogan",
"Stewart",
"Warren",
"Avery",
"Russo",
"O’Connell",
"Dunn",
"Willis",
"Xiong",
"Reid",
"Copeland",
"Sosa",
"Sullivan",
"Cameron",
"Case",
"Holt",
"Stephenson",
"Bartlett",
"Barton",
"Montes",
"Luna",
"Burch",
"Horn",
"Figueroa",
"Moran",
"Charles",
"Lucas",
"Rodriguez",
"Escobar",
"Fisher",
"Randall",
"Holland",
"Mueller",
"Daugherty",
"Doyle",
"Underwood",
"Peters",
"Bean",
"Copeland",
"Arias",
"Finley",
"Galvan",
"Thornton",
"Brennan",
"Lozano",
"Carrillo",
"Walsh",
"Person",
"Lester",
"Perez",
"Novak",
"Rich",
"Frost",
"Roberts",
"Nash",
"Santiago",
"Sutton",
"Wilkins",
"Harding",
"Clayton",
"Vargas",
"Wu",
"Gomez",
"Duke",
"Nixon",
"Patel",
"Webb",
"Acevedo",
"Dillon",
"Williams",
"Berger",
"Meadows",
"Brock",
"Le",
"Richards",
"Lowe",
"Kemp",
"Christian",
"Briggs",
"Ware",
"Grimes",
"Griffith",
"Rollins",
"Walters",
"Bender",
"Scott",
"Vaughan",
"Pennington",
"Rangel",
"Oliver",
"Rowland",
"Vincent",
"Davenport",
"Parra",
"Branch",
"McGuire",
"Spears",
"Blankenship",
"Weaver",
"Hawkins",
"Garcia",
"Blair",
"Harris",
"Russell",
"Atkinson",
"Tang",
"Hudson",
"Caldwell",
"Rojas",
"Whitehead",
"Jacobs",
"Dickerson",
"Brennan",
"Barton",
"Murillo",
"Hodges",
"Sampson",
"Hardy",
"Fields",
"Graham",
"Avila",
"Russell",
"Yoder",
"Duncan",
"Walls",
"Baldwin",
"Reeves",
"Monroe",
"Sanchez",
"McMahon",
"Chambers",
"Brewer",
"Marks",
"Brooks",
"Rose",
"Kirby",
"Walsh",
"Wallace",
"Leal",
"Gonzales",
"Davila",
"Finley",
"Turner",
"Mitchell",
"Branch",
"Sanchez",
"Beltran",
"Serrano",
"Esparza",
"Eaton",
"Martinez",
"Pollard",
"Mills",
"Arellano",
"Jacobson",
"Cobb",
"Hill",
"Becker",
"Wood",
"Larsen",
"Douglas",
"Weaver",
"Novak",
"McMahon",
"Beard",
"Spears",
"Kemp",
"Cole",
"Aguirre",
"Franco",
"Patrick",
"Dalton",
"Douglas",
"Dudley",
"Ross",
"Haley",
"McClain",
"Kerr",
"Delgado",
"Boyle",
"Gutierrez",
"Zavala",
"Snyder",
"Cordova",
"O’Connell",
"Ray",
"Espinoza",
"Pruitt",
"Richmond",
"Alfaro",
"Lugo",
"Arnold",
"Elliott",
"Lawson",
"Cuevas",
"Haynes",
"Garcia",
"Silva",
"Brown",
"Correa",
"Russell",
"Hogan",
"Glass",
"Galindo",
"Parrish",
"Potter",
"Mullins",
"Hubbard",
"Hawkins",
"Brock",
"Marsh",
"Foley",
"Conway",
"McGuire",
"Zuniga",
"Haynes",
"Anthony",
"Fowler",
"Mathis",
"Gardner",
"Barker",
"Delacruz",
"Solis",
"Burch",
"Herman",
"Figueroa",
"Reid",
"Valdez",
"Bravo",
"Esparza",
"Montgomery",
"Acevedo",
"Tanner",
"Blackwell",
"Vargas",
"Bartlett",
"Hanna",
"Dudley",
"Anderson",
"Wiley",
"Brock",
"Wright",
"Suarez",
"McBride",
"Good",
"Branch",
"Mills",
"Taylor",
"Reese",
"Huff",
"Ayala",
"Carpenter",
"Bauer",
"Burns",
"Magana",
"Sherman",
"Rose",
"Berger",
"Walls",
"Chan",
"Sutton",
"Rosario",
"Schmidt",
"Thornton",
"Davis",
"Miles",
"Costa",
"Davis",
"Gonzalez",
"Alvarez",
"Hubbard",
"Colon",
"Walton",
"Marsh",
"Garza",
"Knapp",
"Harrell",
"Mahoney",
"Fitzgerald",
"O’Donnell",
"Duncan",
"Horn",
"Gates",
"Blackwell",
"Harris",
"Valdez",
"Salas",
"Graham",
"Larson",
"Chan",
"Beltran",
"Martinez",
"Lowery",
"Fleming",
"Andersen",
"Rosales",
"Wilcox",
"Kane",
"Anthony",
"Khan",
"Henry",
"Hodge",
"Pittman",
"Meadows",
"Franco",
"Rosales",
"Carr",
"Singh",
"York",
"Winters",
"Boone",
"Cook",
"Mosley",
"Raymond",
"Patton",
"Brooks",
"Camacho",
"Shelton",
"Parra",
"Johns",
"Larson",
"Sherman",
"Moon",
"Ortega",
"Hardy",
"Tucker",
"Decker",
"Perry",
"Stewart",
"Prince",
"Livingston",
"Craig",
"Dyer",
"Chavez",
"Haley",
"Hicks",
"Manning",
"Chung",
"Griffin",
"Bowen",
"Hubbard",
"Aguilar",
"Beck",
"Calderon",
"Chase",
"Fowler",
"Stanton",
"Yates",
"Rosas",
"Curtis",
"Mason",
"Castaneda",
"Schmidt",
"Foley",
"Barker",
"Lin",
"Griffin",
"Xiong",
"Pineda",
"Fletcher",
"Austin",
"Gibson",
"Jensen",
"House",
"Herman",
"Washington",
"Perkins",
"Smith",
"Barker",
"McCoy",
"Preston",
"Lloyd",
"Stewart",
"Sharp",
"Briggs",
"Ferguson",
"Acevedo",
"Decker",
"McIntyre",
"Wilkinson",
"Phillips",
"Yu",
"Horton",
"Richards",
"Ayers",
"Myers",
"Berry",
"Beil",
"Dorsey",
"Pruitt",
"Cantrell",
"Wang",
"Jenkins",
"Sherman",
"Bradley",
"Grant",
"Conrad",
"Fitzgerald",
"Douglas",
"Nolan",
"Hanna",
"Horn",
"Singleton",
"Everett",
"Webster",
"Pitts",
"Wallace",
"Hahn",
"McGuire",
"McLean",
"Dunn",
"Beasley",
"Hahn",
"Holmes",
"Norman",
"McFarland",
"Wilkinson",
"Meadows",
"Hudson",
"Velasquez",
"Mathews",
"Lynch",
"Miranda",
"McClain",
"Snow",
"Rowland",
"Butler",
"Owen",
"Hobbs",
"Maynard",
"Walsh",
"Wade",
"Salazar",
"Fox",
"Buckley",
"Hamilton",
"Rowland",
"Lloyd",
"Leon",
"Bean",
"Weeks",
"Hensley",
"Delarosa",
"Hoover",
"Fry",
"Guerrero",
"Burton",
"O’Connell",
"Velasquez",
"Fernandez",
"Person",
"Costa",
"McClure",
"Monroe",
"Moss",
"Schmitt",
"Terrell",
"Meyer",
"Allison",
"Kent",
"Lam",
"Hopkins",
"Delgado",
"Salinas",
"Deleon",
"Chase",
"Mendoza",
"Barber",
"McClure",
"Hawkins",
"Huber",
"Hurley",
"Jones",
"Lawson",
"Duffy",
"Archer",
"McLean",
"Tang",
"Herman",
"Sanders",
"Larsen",
"Miller",
"Hurst",
"Goodwin",
"Patterson",
"Craig",
"Anderson",
"Deleon",
"Richardson",
"Whitaker",
"Leach",
"Garner",
"Lewis",
"Dillon",
"Gilbert",
"Ortega",
"Meza",
"Huynh",
"Cervantes",
"Chapman",
"Sims",
"Wheeler",
"Chapman",
"Green",
"Horn",
"Gregory",
"Gordon",
"Choi",
"Reilly",
"Lugo",
"Rich",
"Buchanan",
"Meyer",
"Page",
"Haley",
"Fuller",
"Owens",
"Sloan",
"Hardy",
"McKay",
"Gonzales",
"Herman",
"Neal",
"McKenzie",
"Hickman",
"Drake",
"Hahn",
"Cherry",
"Richardson",
"Gilmore",
"Wilson",
"Fitzpatrick",
"Bravo",
"Reed",
"Moses",
"Wong",
"Lane",
"Figueroa",
"Person",
"Bush",
"Decker",
"McDaniel",
"Olsen",
"Valencia",
"Foster",
"Farley",
"Foster",
"McLean",
"Herrera",
"Acosta",
"Davenport",
"Lloyd",
"Williams",
"Callahan",
"Acevedo",
"Prince",
"Stein",
"Andrade",
"Rhodes",
"Zamora",
"Thomas",
"Garcia",
"Stevens",
"Marshall",
"Li",
"Harrington",
"Delacruz",
"Wolfe",
"Holloway",
"Arias",
"Brewer",
"Knox",
"Pitts",
"Lucas",
"Archer",
"Lester",
"Owens",
"Joseph",
"Truong",
"Valentine",
"Keith",
"Donaldson",
"McIntyre",
"Mann",
"Franco",
"Simpson",
"Marquez",
"Crosby",
"Perkins",
"Carr",
"Johnson",
"Vasquez",
"Felix",
"Chen",
"Shelton",
"Cantu",
"Huang",
"Harrington",
"Arias",
"Felix",
"Benjamin",
"Sweeney",
"Hull",
"Gates",
"Becker",
"Clarke",
"Arroyo",
"Arroyo",
"Franco",
"Proctor",
"Knapp",
"Velez",
"Atkinson",
"Bruce",
"Walters",
"Peralta",
"Harrell",
"Henson",
"Burnett",
"Carr",
"Manning",
"Solis",
"Richards",
"Munoz",
"Simmons",
"Wheeler",
"Wilkinson",
"Hansen",
"Gentry",
"McGee",
"Tran",
"Sullivan",
"Moody",
"McCarty",
"Flores",
"Yoder",
"Richard",
"Boyer",
"Rubio",
"Barton",
"Gilmore",
"Conner",
"Keller",
"Schwartz",
"Lynch",
"Daniels",
"Zhang",
"Avalos",
"Raymond",
"Keller",
"Wilson",
"Harvey",
"Parker",
"Roy",
"Walls",
"Kerr",
"Velazquez",
"Sloan",
"Cardenas",
"McIntosh",
"Person",
"Dalton",
"Garner",
"Martinez",
"Ryan",
"Pham",
"Phelps",
"Hail",
"Munoz",
"Hansen",
"Stephens",
"Collins",
"Miller",
"Weiss",
"Bradford",
"Lynch",
"Kennedy",
"Roy",
"Mahoney",
"Hendrix",
"Flynn",
"Zimmerman",
"Glover",
"Yates",
"Fry",
"Neal",
"Andersen",
"Delacruz",
"Morse",
"Pacheco",
"Welch",
"Wang",
"Wagner",
"Burgess",
"Frost",
"Hendrix",
"Williams",
"Dean",
"King",
"Velazquez",
"Salazar",
"Madden",
"Bond",
"Kramer",
"Wise",
"Sheppard",
"Buchanan",
"Martin",
"Leal",
"Hanna",
"Shepard",
"Dennis",
"Yates",
"Castillo",
"Hobbs",
"Suarez",
"Glover",
"Herring",
"Farrell",
"Pugh",
"Rojas",
"Burton",
"O’Connell",
"Carrillo",
"Mata",
"Davis",
"Fox",
"Quinn",
"Mata",
"Randall",
"Fitzpatrick",
"Pierce",
"Keller",
"Montes",
"Willis",
"Salinas",
"Murillo",
"McLean",
"Richards",
"Alexander",
"Melton",
"Carson",
"Curry",
"Sloan",
"Everett",
"Price",
"Harrell",
"Glass",
"King",
"Hebert",
"Cherry",
"Novak",
"Barker",
"Xiong",
"Rangel",
"Pollard",
"Bradshaw",
"Fitzgerald",
"Munoz",
"Christian",
"Rice",
"Ellison",
"Gaines",
"Rubio",
"Levy",
"Dalton",
"Hernandez",
"Stanley",
"Person",
"Villarreal",
"Burns",
"Gillespie",
"Dunlap",
"Vance",
"Garner",
"Russo",
"Leonard",
"Bell",
"Solomon",
"Maddox",
"Holloway",
"Kline",
"Beil",
"Wagner",
"Newman",
"Molina",
"Hanson",
"Avery",
"Wolfe",
"Chan",
"Hodges",
"Nash",
"Beck",
"Douglas",
"Cummings",
"Pineda",
"Barrett",
"Carey",
"Blanchard",
"Chambers",
"Moreno",
"Beltran",
"Sherman",
"O’Neal",
"King",
"Hayes",
"Craig",
"Beil",
"Reynolds",
"Montes",
"Baxter",
"Merritt",
"Hamilton",
"Castro",
"Stokes",
"Juarez",
"Glover",
"Decker",
"Ortega",
"Faulkner",
"Hartman",
"Avery",
"Pruitt",
"Blair",
"Clements",
"Tyler",
"Rowe",
"Rodriguez",
"Clarke",
"Hodge",
"Hobbs",
"Ortega",
"Farley",
"Adkins",
"Xiong",
"Fuentes",
"Stephens",
        };

        [HttpGet]
        [ActionName("GetByEmployeeNumber")]
        [ProducesResponseType(StatusCodes.Status200OK, Type = typeof(Employee))]
        [ProducesResponseType(StatusCodes.Status404NotFound)]
        public IActionResult GetRandomEmployee(long id)
        {
            var rand = new Random(id.GetHashCode());

            if (rand.Next() % 2 == 0) return Ok(null);

            var firstName = FirstNames[rand.Next() % FirstNames.Length];
            var lastName = LastNames[rand.Next() % LastNames.Length];

            var employee = new Employee
            {
                Id = id,
                FirstName = firstName,
                LastName = lastName,
                Email = $"{firstName.ToLower()[0]}{lastName.ToLower()}@costco.com",
                HireDate = new DateTime(rand.Next(1980, 2022), rand.Next(1, 13), rand.Next(1, 29)),
                Location = _allLocations[rand.Next() % _allLocations.Count].Id,
                PasswordHash = PasswordHashOf(id.ToString()),
                Wage = rand.Next(1000, 4000) / 100.0f,
                PhoneNumber = (rand.NextInt64() % 10000000000L).ToString("(000)000-0000"),
                SocialSecurityNumber = (rand.NextInt64() % 10000000000L).ToString("000-000-0000")
            };

            return Ok(employee);
        }

        #endregion
    }
}
